- name: Betterbird - Linux build
  hosts: localhost
  connection: local
  gather_facts: no

  vars:
    betterbird_patches:
      repository: https://github.com/Betterbird/thunderbird-patches.git
      directory: "{{ playbook_dir }}/betterbird-patches"

  tasks:
    - name: check for 64-bit linux
      shell:
        cmd: uname -m
      register: check_64bit
      changed_when: false
      failed_when: check_64bit.stdout != "x86_64"

    - name: install necessary packages
      become: yes
      package:
        state: present
        name:
          - git
          - mercurial
          - python3
          - python3-pip

    - name: clone betterbird repo
      git:
        repo: "{{ betterbird_patches.repository }}"
        dest: "{{ betterbird_patches.directory }}"
        force: yes
        depth: 1

    - name: include releases.yml
      include_vars:
        file: "{{ betterbird_patches.directory }}/releases.yml"

    - name: clone base repos
      include_tasks: tasks/clone_base_repo.yml
      loop:
        - { directory: "source",
            url: "{{ current_release.repos.mozilla.url }}",
            revision: "{{ current_release.repos.mozilla.revision }}" }
        - { directory: "source/comm",
            url: "{{ current_release.repos.comm.url }}",
            revision: "{{ current_release.repos.comm.revision }}" }
      loop_control:
        loop_var: base_repo

    - name: find all patch files
      find:
        paths: "{{ betterbird_patches.directory }}/{{ current_release.directory }}"
        patterns: "*.patch"
        recurse: yes
      changed_when: false
      register: betterbird_patch_files

    - name: apply patches
      include_tasks: tasks/apply_patches.yml
      loop:
        - { patches_directory: "{{ playbook_dir }}/source/.hg/patches",
            series_file: "{{ betterbird_patches.directory }}/{{ current_release.directory }}/series-M-C",
            patch_file_filter: "'-m-c.patch'" }
        - { patches_directory: "{{ playbook_dir }}/source/comm/.hg/patches",
            series_file: "{{ betterbird_patches.directory }}/{{ current_release.directory }}/series",
            patch_file_filter: "not '-m-c.patch'" }

    - name: bootstrap
      shell:
        chdir: "{{ playbook_dir }}/source"
        cmd: >
          ./mach
          --no-interactive
          bootstrap
          --application-choice "Firefox for Desktop"

    - name: mozconfig setup
      lineinfile:
        path: "{{ playbook_dir }}/source/mozconfig"
        create: yes
        line: "{{ item }}"
      loop:
        - "ac_add_options --enable-application=comm/mail"
        - "ac_add_options --enable-official-branding"
        #
        - "ac_add_options --with-branding=comm/mail/branding/betterbird"
        #
        - "ac_add_options --disable-updater"
        - "ac_add_options --disable-crashreporter"
        - "ac_add_options --disable-tests"
        #
        - "MOZ_REQUIRE_SIGNING="
        - "MOZ_REQUIRE_ADDON_SIGNING=0"
        #
        - "export MOZILLA_OFFICIAL=1"
        - "export MOZ_TELEMETRY_REPORTING="
        - "export MOZ_NO_PIE_COMPAT=1"

    - name: build
      shell:
        chdir: "{{ playbook_dir }}/source"
        cmd: ./mach build

    - name: package
      shell:
        chdir: "{{ playbook_dir }}/source"
        cmd: ./mach package

    - name: find tarballs
      find:
        paths: "{{ playbook_dir }}/source/obj-x86_64-pc-linux-gnu/dist"
        use_regex: yes
        patterns: "^betterbird-.*.tar.bz2$"
      register: tarballs

    - set_fact:
        latest_tarball: "{{ (tarballs.files | sort(attribute='ctime') | map(attribute='path') | reverse | list)[0] | basename }}"

    - name: success message
      debug:
        msg:
          - "┌──────────────────────┐"
          - "│                      │"
          - "│   BUILD SUCCESSFUL   │"
          - "│                      │"
          - "├──────────────────────┴─────────────────────────────────{{ latest_tarball | regex_replace('.', '─') }}┐"
          - "│ latest package: ./source/obj-x86_64-pc-linux-gnu/dist/{{ latest_tarball }} │"
          - "└────────────────────────────────────────────────────────{{ latest_tarball | regex_replace('.', '─') }}┘"
